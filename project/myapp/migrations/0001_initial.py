# -*- coding: utf-8 -*-
# Generated by Django 1.11.4 on 2018-07-03 07:00
from __future__ import unicode_literals

import datetime
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Administrator',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('username', models.CharField(default='姓名', help_text='姓名', max_length=20)),
                ('password', models.CharField(default='', help_text='密码', max_length=20)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Custormer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('username', models.CharField(default='名称', help_text='客户名称', max_length=20)),
                ('email', models.CharField(blank=True, default='', help_text='邮箱', max_length=30, null=True)),
                ('company', models.CharField(default='', help_text='公司名称', max_length=40, null=True)),
                ('address', models.CharField(default='', help_text='地址', max_length=50, null=True)),
                ('phone', models.CharField(blank=True, default='', help_text='手机号', max_length=16, null=True)),
                ('mobile', models.CharField(blank=True, default='', help_text='固定电话', max_length=20, null=True)),
                ('qq', models.CharField(blank=True, default='', help_text='qq', max_length=20, null=True)),
                ('wechat', models.CharField(blank=True, default='', help_text='微信号', max_length=20, null=True)),
                ('web', models.CharField(blank=True, default='', help_text='网站', max_length=50, null=True)),
                ('industry', models.CharField(blank=True, default='', help_text='行业', max_length=50, null=True)),
                ('description', models.TextField(blank=True, default='', help_text='公司简介', null=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='DealRecord',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_date', models.DateTimeField(auto_now=True, help_text='消费时间')),
                ('money', models.FloatField(default='', help_text='充值金额')),
                ('station', models.BooleanField(default=False, help_text='完成支付为True, 未完成为Flase')),
                ('paymentid', models.CharField(help_text='第三方支付id', max_length=128)),
            ],
        ),
        migrations.CreateModel(
            name='GetPoint',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('get_date', models.DateTimeField(auto_now=True, help_text='获取时间')),
                ('reasion', models.CharField(default='', help_text='获取原因', max_length=50)),
                ('amount', models.IntegerField(help_text='积分总数')),
            ],
        ),
        migrations.CreateModel(
            name='Iterm',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='JoinQuestion',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_date', models.DateTimeField(auto_now=True, help_text='创建时间')),
                ('is_done', models.BooleanField(default=False, help_text='是否已经完成')),
            ],
        ),
        migrations.CreateModel(
            name='Point',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('balance', models.IntegerField(default=0, help_text='余额')),
            ],
        ),
        migrations.CreateModel(
            name='PutPoint',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('get_date', models.DateTimeField(auto_now=True, help_text='消费时间')),
                ('reasion', models.CharField(default='', help_text='消费原因', max_length=50)),
                ('amount', models.IntegerField(help_text='积分总数')),
                ('point', models.ForeignKey(help_text='关联积分', on_delete=django.db.models.deletion.CASCADE, to='myapp.Point')),
            ],
        ),
        migrations.CreateModel(
            name='Question',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(help_text='题目', max_length=128)),
                ('index', models.IntegerField(default=0, help_text='题目题号')),
                ('category', models.CharField(choices=[('radio', '单选'), ('select', '多选')], default='redio', help_text='是否多选', max_length=16)),
                ('type', models.BooleanField(default=1, help_text='1->必答题， 0->非必答')),
            ],
        ),
        migrations.CreateModel(
            name='QuestionItem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.CharField(help_text='选项内容', max_length=32)),
                ('question', models.ForeignKey(help_text='关联题目', on_delete=django.db.models.deletion.CASCADE, to='myapp.Question')),
            ],
        ),
        migrations.CreateModel(
            name='Questionnaire',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(default='标题', help_text='标题', max_length=64)),
                ('create_date', models.DateTimeField(help_text='创建时间')),
                ('deadline', models.DateTimeField(help_text='截止时间')),
                ('state', models.IntegerField(default=0, help_text='状态,0-->草稿,1-->待审核,2-->审核失败,3-->审核成功,4-->发布成功')),
                ('quantity', models.IntegerField(default=1, help_text='发布数量')),
                ('free_count', models.IntegerField(default=1, help_text='可用问卷数量')),
                ('cusomer', models.ForeignKey(help_text='客户信息', on_delete=django.db.models.deletion.CASCADE, to='myapp.Custormer')),
            ],
        ),
        migrations.CreateModel(
            name='QuestionnaireComment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_date', models.DateTimeField(auto_now=True, help_text='审核时间')),
                ('comment', models.TextField(help_text='审核批注')),
                ('questionnaire', models.ForeignKey(help_text='问卷', on_delete=django.db.models.deletion.CASCADE, to='myapp.Questionnaire')),
            ],
        ),
        migrations.CreateModel(
            name='Recharge',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_date', models.DateTimeField(auto_now=True, help_text='充值时间')),
                ('money', models.FloatField(default='', help_text='充值金额')),
                ('station', models.BooleanField(default=False, help_text='完成支付为True, 未完成为Flase')),
                ('payment', models.CharField(choices=[('alipay', '支付宝'), ('wechat', '微信')], help_text='支付方式', max_length=32)),
                ('paymentid', models.CharField(help_text='第三方支付id', max_length=128)),
            ],
        ),
        migrations.CreateModel(
            name='UserInfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, default='姓名', help_text='姓名', max_length=15, null=True)),
                ('age', models.IntegerField(default=1, help_text='年龄')),
                ('gender', models.BooleanField(default='male', help_text='性别', max_length=18)),
                ('phone', models.CharField(blank=True, default='', help_text='手机号码', max_length=16, null=True)),
                ('email', models.EmailField(blank=True, default='', help_text='邮箱', max_length=254, null=True)),
                ('address', models.CharField(blank=True, default='', help_text='地址', max_length=256, null=True)),
                ('birthday', models.DateField(default=datetime.date(2018, 1, 1), help_text='出生日期', null=True)),
                ('qq', models.CharField(blank=True, default='', help_text='qq', max_length=16, null=True)),
                ('wechat', models.CharField(blank=True, default='', help_text='微信', max_length=16, null=True)),
                ('job', models.CharField(blank=True, default='', help_text='工作', max_length=64, null=True)),
                ('salary', models.CharField(blank=True, default='', help_text='薪水', max_length=32, null=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Wallet',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('balance', models.IntegerField(default=0, help_text='余额')),
                ('customer', models.OneToOneField(help_text='客户', on_delete=django.db.models.deletion.CASCADE, to='myapp.Custormer')),
            ],
        ),
        migrations.AddField(
            model_name='recharge',
            name='wallet',
            field=models.ForeignKey(help_text='关联钱包', on_delete=django.db.models.deletion.CASCADE, to='myapp.Wallet'),
        ),
        migrations.AddField(
            model_name='question',
            name='questionnaire',
            field=models.ForeignKey(help_text='关联问卷', on_delete=django.db.models.deletion.CASCADE, to='myapp.Questionnaire'),
        ),
        migrations.AddField(
            model_name='point',
            name='userinfo',
            field=models.OneToOneField(help_text='用户信息', on_delete=django.db.models.deletion.CASCADE, to='myapp.UserInfo'),
        ),
        migrations.AddField(
            model_name='joinquestion',
            name='questionnaire',
            field=models.ForeignKey(help_text='关联问卷', on_delete=django.db.models.deletion.CASCADE, to='myapp.Questionnaire'),
        ),
        migrations.AddField(
            model_name='joinquestion',
            name='userinfo',
            field=models.ForeignKey(help_text='关联用户', null=True, on_delete=django.db.models.deletion.CASCADE, to='myapp.UserInfo'),
        ),
        migrations.AddField(
            model_name='iterm',
            name='questionItem',
            field=models.ForeignKey(help_text='关联选项', on_delete=django.db.models.deletion.CASCADE, to='myapp.QuestionItem'),
        ),
        migrations.AddField(
            model_name='iterm',
            name='userinfo',
            field=models.ForeignKey(help_text='关联用户', on_delete=django.db.models.deletion.CASCADE, to='myapp.UserInfo'),
        ),
        migrations.AddField(
            model_name='getpoint',
            name='point',
            field=models.ForeignKey(help_text='关联积分', on_delete=django.db.models.deletion.CASCADE, to='myapp.Point'),
        ),
        migrations.AddField(
            model_name='dealrecord',
            name='wallet',
            field=models.ForeignKey(help_text='关联钱包', on_delete=django.db.models.deletion.CASCADE, to='myapp.Wallet'),
        ),
    ]
